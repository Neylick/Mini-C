State 0:
program' -> . program [ # ]
-- On error shift to state 1
-- On VOID shift to state 2
-- On INT shift to state 3
-- On IDENT shift to state 4
-- On BOOL shift to state 56
-- On variable_decl shift to state 57
-- On typ shift to state 58
-- On simple_var_decl shift to state 97
-- On program shift to state 119
-- On function_decl shift to state 116
-- On declaration_list shift to state 120
-- On EOF reduce production declaration_list -> 

State 1:
program -> error . [ # ]
-- On # reduce production program -> error 

State 2:
typ -> VOID . [ IDENT ]
-- On IDENT reduce production typ -> VOID 

State 3:
typ -> INT . [ IDENT ]
-- On IDENT reduce production typ -> INT 

State 4:
variable_decl -> IDENT . SET expression SEMI [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On SET shift to state 5

State 5:
variable_decl -> IDENT SET . expression SEMI [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 54

State 6:
expression -> LPAR . expression RPAR [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 16

State 7:
expression -> IDENT . LPAR call_list RPAR [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> IDENT . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 8
-- On XOR reduce production expression -> IDENT 
-- On SUB reduce production expression -> IDENT 
-- On SEMI reduce production expression -> IDENT 
-- On RPAR reduce production expression -> IDENT 
-- On OR reduce production expression -> IDENT 
-- On NEQ reduce production expression -> IDENT 
-- On MUL reduce production expression -> IDENT 
-- On MOD reduce production expression -> IDENT 
-- On LT reduce production expression -> IDENT 
-- On LET reduce production expression -> IDENT 
-- On GT reduce production expression -> IDENT 
-- On GET reduce production expression -> IDENT 
-- On EQ reduce production expression -> IDENT 
-- On END reduce production expression -> IDENT 
-- On DIV reduce production expression -> IDENT 
-- On BXOR reduce production expression -> IDENT 
-- On BOR reduce production expression -> IDENT 
-- On BNEQ reduce production expression -> IDENT 
-- On BAND reduce production expression -> IDENT 
-- On AND reduce production expression -> IDENT 
-- On ADD reduce production expression -> IDENT 

State 8:
expression -> IDENT LPAR . call_list RPAR [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On IDENT shift to state 9
-- On call_list shift to state 12
-- On RPAR reduce production call_list -> 

State 9:
call_list -> IDENT . [ RPAR ]
call_list -> IDENT . SEPARATOR call_list [ RPAR ]
-- On SEPARATOR shift to state 10
-- On RPAR reduce production call_list -> IDENT 

State 10:
call_list -> IDENT SEPARATOR . call_list [ RPAR ]
-- On IDENT shift to state 9
-- On call_list shift to state 11
-- On RPAR reduce production call_list -> 

State 11:
call_list -> IDENT SEPARATOR call_list . [ RPAR ]
-- On RPAR reduce production call_list -> IDENT SEPARATOR call_list 

State 12:
expression -> IDENT LPAR call_list . RPAR [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On RPAR shift to state 13

State 13:
expression -> IDENT LPAR call_list RPAR . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR reduce production expression -> IDENT LPAR call_list RPAR 
-- On SUB reduce production expression -> IDENT LPAR call_list RPAR 
-- On SEMI reduce production expression -> IDENT LPAR call_list RPAR 
-- On RPAR reduce production expression -> IDENT LPAR call_list RPAR 
-- On OR reduce production expression -> IDENT LPAR call_list RPAR 
-- On NEQ reduce production expression -> IDENT LPAR call_list RPAR 
-- On MUL reduce production expression -> IDENT LPAR call_list RPAR 
-- On MOD reduce production expression -> IDENT LPAR call_list RPAR 
-- On LT reduce production expression -> IDENT LPAR call_list RPAR 
-- On LET reduce production expression -> IDENT LPAR call_list RPAR 
-- On GT reduce production expression -> IDENT LPAR call_list RPAR 
-- On GET reduce production expression -> IDENT LPAR call_list RPAR 
-- On EQ reduce production expression -> IDENT LPAR call_list RPAR 
-- On END reduce production expression -> IDENT LPAR call_list RPAR 
-- On DIV reduce production expression -> IDENT LPAR call_list RPAR 
-- On BXOR reduce production expression -> IDENT LPAR call_list RPAR 
-- On BOR reduce production expression -> IDENT LPAR call_list RPAR 
-- On BNEQ reduce production expression -> IDENT LPAR call_list RPAR 
-- On BAND reduce production expression -> IDENT LPAR call_list RPAR 
-- On AND reduce production expression -> IDENT LPAR call_list RPAR 
-- On ADD reduce production expression -> IDENT LPAR call_list RPAR 

State 14:
expression -> CST . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR reduce production expression -> CST 
-- On SUB reduce production expression -> CST 
-- On SEMI reduce production expression -> CST 
-- On RPAR reduce production expression -> CST 
-- On OR reduce production expression -> CST 
-- On NEQ reduce production expression -> CST 
-- On MUL reduce production expression -> CST 
-- On MOD reduce production expression -> CST 
-- On LT reduce production expression -> CST 
-- On LET reduce production expression -> CST 
-- On GT reduce production expression -> CST 
-- On GET reduce production expression -> CST 
-- On EQ reduce production expression -> CST 
-- On END reduce production expression -> CST 
-- On DIV reduce production expression -> CST 
-- On BXOR reduce production expression -> CST 
-- On BOR reduce production expression -> CST 
-- On BNEQ reduce production expression -> CST 
-- On BAND reduce production expression -> CST 
-- On AND reduce production expression -> CST 
-- On ADD reduce production expression -> CST 

State 15:
expression -> BOOL_CST . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR reduce production expression -> BOOL_CST 
-- On SUB reduce production expression -> BOOL_CST 
-- On SEMI reduce production expression -> BOOL_CST 
-- On RPAR reduce production expression -> BOOL_CST 
-- On OR reduce production expression -> BOOL_CST 
-- On NEQ reduce production expression -> BOOL_CST 
-- On MUL reduce production expression -> BOOL_CST 
-- On MOD reduce production expression -> BOOL_CST 
-- On LT reduce production expression -> BOOL_CST 
-- On LET reduce production expression -> BOOL_CST 
-- On GT reduce production expression -> BOOL_CST 
-- On GET reduce production expression -> BOOL_CST 
-- On EQ reduce production expression -> BOOL_CST 
-- On END reduce production expression -> BOOL_CST 
-- On DIV reduce production expression -> BOOL_CST 
-- On BXOR reduce production expression -> BOOL_CST 
-- On BOR reduce production expression -> BOOL_CST 
-- On BNEQ reduce production expression -> BOOL_CST 
-- On BAND reduce production expression -> BOOL_CST 
-- On AND reduce production expression -> BOOL_CST 
-- On ADD reduce production expression -> BOOL_CST 

State 16:
expression -> LPAR expression . RPAR [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LT expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On RPAR shift to state 53
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51

State 17:
expression -> expression XOR . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 18

State 18:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression XOR expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression XOR expression 
-- On SUB reduce production expression -> expression XOR expression 
-- On SEMI reduce production expression -> expression XOR expression 
-- On RPAR reduce production expression -> expression XOR expression 
-- On OR reduce production expression -> expression XOR expression 
-- On NEQ reduce production expression -> expression XOR expression 
-- On MUL reduce production expression -> expression XOR expression 
-- On MOD reduce production expression -> expression XOR expression 
-- On LT reduce production expression -> expression XOR expression 
-- On LET reduce production expression -> expression XOR expression 
-- On GT reduce production expression -> expression XOR expression 
-- On GET reduce production expression -> expression XOR expression 
-- On EQ reduce production expression -> expression XOR expression 
-- On END reduce production expression -> expression XOR expression 
-- On DIV reduce production expression -> expression XOR expression 
-- On BXOR reduce production expression -> expression XOR expression 
-- On BOR reduce production expression -> expression XOR expression 
-- On BNEQ reduce production expression -> expression XOR expression 
-- On BAND reduce production expression -> expression XOR expression 
-- On AND reduce production expression -> expression XOR expression 
-- On ADD reduce production expression -> expression XOR expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 19:
expression -> expression SUB . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 20

State 20:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression SUB expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression SUB expression 
-- On SUB reduce production expression -> expression SUB expression 
-- On SEMI reduce production expression -> expression SUB expression 
-- On RPAR reduce production expression -> expression SUB expression 
-- On OR reduce production expression -> expression SUB expression 
-- On NEQ reduce production expression -> expression SUB expression 
-- On MUL reduce production expression -> expression SUB expression 
-- On MOD reduce production expression -> expression SUB expression 
-- On LT reduce production expression -> expression SUB expression 
-- On LET reduce production expression -> expression SUB expression 
-- On GT reduce production expression -> expression SUB expression 
-- On GET reduce production expression -> expression SUB expression 
-- On EQ reduce production expression -> expression SUB expression 
-- On END reduce production expression -> expression SUB expression 
-- On DIV reduce production expression -> expression SUB expression 
-- On BXOR reduce production expression -> expression SUB expression 
-- On BOR reduce production expression -> expression SUB expression 
-- On BNEQ reduce production expression -> expression SUB expression 
-- On BAND reduce production expression -> expression SUB expression 
-- On AND reduce production expression -> expression SUB expression 
-- On ADD reduce production expression -> expression SUB expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 21:
expression -> expression OR . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 22

State 22:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression OR expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression OR expression 
-- On SUB reduce production expression -> expression OR expression 
-- On SEMI reduce production expression -> expression OR expression 
-- On RPAR reduce production expression -> expression OR expression 
-- On OR reduce production expression -> expression OR expression 
-- On NEQ reduce production expression -> expression OR expression 
-- On MUL reduce production expression -> expression OR expression 
-- On MOD reduce production expression -> expression OR expression 
-- On LT reduce production expression -> expression OR expression 
-- On LET reduce production expression -> expression OR expression 
-- On GT reduce production expression -> expression OR expression 
-- On GET reduce production expression -> expression OR expression 
-- On EQ reduce production expression -> expression OR expression 
-- On END reduce production expression -> expression OR expression 
-- On DIV reduce production expression -> expression OR expression 
-- On BXOR reduce production expression -> expression OR expression 
-- On BOR reduce production expression -> expression OR expression 
-- On BNEQ reduce production expression -> expression OR expression 
-- On BAND reduce production expression -> expression OR expression 
-- On AND reduce production expression -> expression OR expression 
-- On ADD reduce production expression -> expression OR expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 23:
expression -> expression NEQ . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 24

State 24:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression NEQ expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression NEQ expression 
-- On SUB reduce production expression -> expression NEQ expression 
-- On SEMI reduce production expression -> expression NEQ expression 
-- On RPAR reduce production expression -> expression NEQ expression 
-- On OR reduce production expression -> expression NEQ expression 
-- On NEQ reduce production expression -> expression NEQ expression 
-- On MUL reduce production expression -> expression NEQ expression 
-- On MOD reduce production expression -> expression NEQ expression 
-- On LT reduce production expression -> expression NEQ expression 
-- On LET reduce production expression -> expression NEQ expression 
-- On GT reduce production expression -> expression NEQ expression 
-- On GET reduce production expression -> expression NEQ expression 
-- On EQ reduce production expression -> expression NEQ expression 
-- On END reduce production expression -> expression NEQ expression 
-- On DIV reduce production expression -> expression NEQ expression 
-- On BXOR reduce production expression -> expression NEQ expression 
-- On BOR reduce production expression -> expression NEQ expression 
-- On BNEQ reduce production expression -> expression NEQ expression 
-- On BAND reduce production expression -> expression NEQ expression 
-- On AND reduce production expression -> expression NEQ expression 
-- On ADD reduce production expression -> expression NEQ expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 25:
expression -> expression MUL . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 26

State 26:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression MUL expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression MUL expression 
-- On SUB reduce production expression -> expression MUL expression 
-- On SEMI reduce production expression -> expression MUL expression 
-- On RPAR reduce production expression -> expression MUL expression 
-- On OR reduce production expression -> expression MUL expression 
-- On NEQ reduce production expression -> expression MUL expression 
-- On MUL reduce production expression -> expression MUL expression 
-- On MOD reduce production expression -> expression MUL expression 
-- On LT reduce production expression -> expression MUL expression 
-- On LET reduce production expression -> expression MUL expression 
-- On GT reduce production expression -> expression MUL expression 
-- On GET reduce production expression -> expression MUL expression 
-- On EQ reduce production expression -> expression MUL expression 
-- On END reduce production expression -> expression MUL expression 
-- On DIV reduce production expression -> expression MUL expression 
-- On BXOR reduce production expression -> expression MUL expression 
-- On BOR reduce production expression -> expression MUL expression 
-- On BNEQ reduce production expression -> expression MUL expression 
-- On BAND reduce production expression -> expression MUL expression 
-- On AND reduce production expression -> expression MUL expression 
-- On ADD reduce production expression -> expression MUL expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 27:
expression -> expression MOD . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 28

State 28:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression MOD expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression MOD expression 
-- On SUB reduce production expression -> expression MOD expression 
-- On SEMI reduce production expression -> expression MOD expression 
-- On RPAR reduce production expression -> expression MOD expression 
-- On OR reduce production expression -> expression MOD expression 
-- On NEQ reduce production expression -> expression MOD expression 
-- On MUL reduce production expression -> expression MOD expression 
-- On MOD reduce production expression -> expression MOD expression 
-- On LT reduce production expression -> expression MOD expression 
-- On LET reduce production expression -> expression MOD expression 
-- On GT reduce production expression -> expression MOD expression 
-- On GET reduce production expression -> expression MOD expression 
-- On EQ reduce production expression -> expression MOD expression 
-- On END reduce production expression -> expression MOD expression 
-- On DIV reduce production expression -> expression MOD expression 
-- On BXOR reduce production expression -> expression MOD expression 
-- On BOR reduce production expression -> expression MOD expression 
-- On BNEQ reduce production expression -> expression MOD expression 
-- On BAND reduce production expression -> expression MOD expression 
-- On AND reduce production expression -> expression MOD expression 
-- On ADD reduce production expression -> expression MOD expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 29:
expression -> expression LT . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 30

State 30:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression LT expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression LT expression 
-- On SUB reduce production expression -> expression LT expression 
-- On SEMI reduce production expression -> expression LT expression 
-- On RPAR reduce production expression -> expression LT expression 
-- On OR reduce production expression -> expression LT expression 
-- On NEQ reduce production expression -> expression LT expression 
-- On MUL reduce production expression -> expression LT expression 
-- On MOD reduce production expression -> expression LT expression 
-- On LT reduce production expression -> expression LT expression 
-- On LET reduce production expression -> expression LT expression 
-- On GT reduce production expression -> expression LT expression 
-- On GET reduce production expression -> expression LT expression 
-- On EQ reduce production expression -> expression LT expression 
-- On END reduce production expression -> expression LT expression 
-- On DIV reduce production expression -> expression LT expression 
-- On BXOR reduce production expression -> expression LT expression 
-- On BOR reduce production expression -> expression LT expression 
-- On BNEQ reduce production expression -> expression LT expression 
-- On BAND reduce production expression -> expression LT expression 
-- On AND reduce production expression -> expression LT expression 
-- On ADD reduce production expression -> expression LT expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 31:
expression -> expression LET . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 32

State 32:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression LET expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression LET expression 
-- On SUB reduce production expression -> expression LET expression 
-- On SEMI reduce production expression -> expression LET expression 
-- On RPAR reduce production expression -> expression LET expression 
-- On OR reduce production expression -> expression LET expression 
-- On NEQ reduce production expression -> expression LET expression 
-- On MUL reduce production expression -> expression LET expression 
-- On MOD reduce production expression -> expression LET expression 
-- On LT reduce production expression -> expression LET expression 
-- On LET reduce production expression -> expression LET expression 
-- On GT reduce production expression -> expression LET expression 
-- On GET reduce production expression -> expression LET expression 
-- On EQ reduce production expression -> expression LET expression 
-- On END reduce production expression -> expression LET expression 
-- On DIV reduce production expression -> expression LET expression 
-- On BXOR reduce production expression -> expression LET expression 
-- On BOR reduce production expression -> expression LET expression 
-- On BNEQ reduce production expression -> expression LET expression 
-- On BAND reduce production expression -> expression LET expression 
-- On AND reduce production expression -> expression LET expression 
-- On ADD reduce production expression -> expression LET expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 33:
expression -> expression GT . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 34

State 34:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression GT expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression GT expression 
-- On SUB reduce production expression -> expression GT expression 
-- On SEMI reduce production expression -> expression GT expression 
-- On RPAR reduce production expression -> expression GT expression 
-- On OR reduce production expression -> expression GT expression 
-- On NEQ reduce production expression -> expression GT expression 
-- On MUL reduce production expression -> expression GT expression 
-- On MOD reduce production expression -> expression GT expression 
-- On LT reduce production expression -> expression GT expression 
-- On LET reduce production expression -> expression GT expression 
-- On GT reduce production expression -> expression GT expression 
-- On GET reduce production expression -> expression GT expression 
-- On EQ reduce production expression -> expression GT expression 
-- On END reduce production expression -> expression GT expression 
-- On DIV reduce production expression -> expression GT expression 
-- On BXOR reduce production expression -> expression GT expression 
-- On BOR reduce production expression -> expression GT expression 
-- On BNEQ reduce production expression -> expression GT expression 
-- On BAND reduce production expression -> expression GT expression 
-- On AND reduce production expression -> expression GT expression 
-- On ADD reduce production expression -> expression GT expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 35:
expression -> expression GET . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 36

State 36:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression GET expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression GET expression 
-- On SUB reduce production expression -> expression GET expression 
-- On SEMI reduce production expression -> expression GET expression 
-- On RPAR reduce production expression -> expression GET expression 
-- On OR reduce production expression -> expression GET expression 
-- On NEQ reduce production expression -> expression GET expression 
-- On MUL reduce production expression -> expression GET expression 
-- On MOD reduce production expression -> expression GET expression 
-- On LT reduce production expression -> expression GET expression 
-- On LET reduce production expression -> expression GET expression 
-- On GT reduce production expression -> expression GET expression 
-- On GET reduce production expression -> expression GET expression 
-- On EQ reduce production expression -> expression GET expression 
-- On END reduce production expression -> expression GET expression 
-- On DIV reduce production expression -> expression GET expression 
-- On BXOR reduce production expression -> expression GET expression 
-- On BOR reduce production expression -> expression GET expression 
-- On BNEQ reduce production expression -> expression GET expression 
-- On BAND reduce production expression -> expression GET expression 
-- On AND reduce production expression -> expression GET expression 
-- On ADD reduce production expression -> expression GET expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 37:
expression -> expression EQ . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 38

State 38:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression EQ expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression EQ expression 
-- On SUB reduce production expression -> expression EQ expression 
-- On SEMI reduce production expression -> expression EQ expression 
-- On RPAR reduce production expression -> expression EQ expression 
-- On OR reduce production expression -> expression EQ expression 
-- On NEQ reduce production expression -> expression EQ expression 
-- On MUL reduce production expression -> expression EQ expression 
-- On MOD reduce production expression -> expression EQ expression 
-- On LT reduce production expression -> expression EQ expression 
-- On LET reduce production expression -> expression EQ expression 
-- On GT reduce production expression -> expression EQ expression 
-- On GET reduce production expression -> expression EQ expression 
-- On EQ reduce production expression -> expression EQ expression 
-- On END reduce production expression -> expression EQ expression 
-- On DIV reduce production expression -> expression EQ expression 
-- On BXOR reduce production expression -> expression EQ expression 
-- On BOR reduce production expression -> expression EQ expression 
-- On BNEQ reduce production expression -> expression EQ expression 
-- On BAND reduce production expression -> expression EQ expression 
-- On AND reduce production expression -> expression EQ expression 
-- On ADD reduce production expression -> expression EQ expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 39:
expression -> expression DIV . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 40

State 40:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression DIV expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression DIV expression 
-- On SUB reduce production expression -> expression DIV expression 
-- On SEMI reduce production expression -> expression DIV expression 
-- On RPAR reduce production expression -> expression DIV expression 
-- On OR reduce production expression -> expression DIV expression 
-- On NEQ reduce production expression -> expression DIV expression 
-- On MUL reduce production expression -> expression DIV expression 
-- On MOD reduce production expression -> expression DIV expression 
-- On LT reduce production expression -> expression DIV expression 
-- On LET reduce production expression -> expression DIV expression 
-- On GT reduce production expression -> expression DIV expression 
-- On GET reduce production expression -> expression DIV expression 
-- On EQ reduce production expression -> expression DIV expression 
-- On END reduce production expression -> expression DIV expression 
-- On DIV reduce production expression -> expression DIV expression 
-- On BXOR reduce production expression -> expression DIV expression 
-- On BOR reduce production expression -> expression DIV expression 
-- On BNEQ reduce production expression -> expression DIV expression 
-- On BAND reduce production expression -> expression DIV expression 
-- On AND reduce production expression -> expression DIV expression 
-- On ADD reduce production expression -> expression DIV expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 41:
expression -> expression BXOR . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 42

State 42:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression BXOR expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression BXOR expression 
-- On SUB reduce production expression -> expression BXOR expression 
-- On SEMI reduce production expression -> expression BXOR expression 
-- On RPAR reduce production expression -> expression BXOR expression 
-- On OR reduce production expression -> expression BXOR expression 
-- On NEQ reduce production expression -> expression BXOR expression 
-- On MUL reduce production expression -> expression BXOR expression 
-- On MOD reduce production expression -> expression BXOR expression 
-- On LT reduce production expression -> expression BXOR expression 
-- On LET reduce production expression -> expression BXOR expression 
-- On GT reduce production expression -> expression BXOR expression 
-- On GET reduce production expression -> expression BXOR expression 
-- On EQ reduce production expression -> expression BXOR expression 
-- On END reduce production expression -> expression BXOR expression 
-- On DIV reduce production expression -> expression BXOR expression 
-- On BXOR reduce production expression -> expression BXOR expression 
-- On BOR reduce production expression -> expression BXOR expression 
-- On BNEQ reduce production expression -> expression BXOR expression 
-- On BAND reduce production expression -> expression BXOR expression 
-- On AND reduce production expression -> expression BXOR expression 
-- On ADD reduce production expression -> expression BXOR expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 43:
expression -> expression BOR . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 44

State 44:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression BOR expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression BOR expression 
-- On SUB reduce production expression -> expression BOR expression 
-- On SEMI reduce production expression -> expression BOR expression 
-- On RPAR reduce production expression -> expression BOR expression 
-- On OR reduce production expression -> expression BOR expression 
-- On NEQ reduce production expression -> expression BOR expression 
-- On MUL reduce production expression -> expression BOR expression 
-- On MOD reduce production expression -> expression BOR expression 
-- On LT reduce production expression -> expression BOR expression 
-- On LET reduce production expression -> expression BOR expression 
-- On GT reduce production expression -> expression BOR expression 
-- On GET reduce production expression -> expression BOR expression 
-- On EQ reduce production expression -> expression BOR expression 
-- On END reduce production expression -> expression BOR expression 
-- On DIV reduce production expression -> expression BOR expression 
-- On BXOR reduce production expression -> expression BOR expression 
-- On BOR reduce production expression -> expression BOR expression 
-- On BNEQ reduce production expression -> expression BOR expression 
-- On BAND reduce production expression -> expression BOR expression 
-- On AND reduce production expression -> expression BOR expression 
-- On ADD reduce production expression -> expression BOR expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 45:
expression -> expression BNEQ . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 46

State 46:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression BNEQ expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression BNEQ expression 
-- On SUB reduce production expression -> expression BNEQ expression 
-- On SEMI reduce production expression -> expression BNEQ expression 
-- On RPAR reduce production expression -> expression BNEQ expression 
-- On OR reduce production expression -> expression BNEQ expression 
-- On NEQ reduce production expression -> expression BNEQ expression 
-- On MUL reduce production expression -> expression BNEQ expression 
-- On MOD reduce production expression -> expression BNEQ expression 
-- On LT reduce production expression -> expression BNEQ expression 
-- On LET reduce production expression -> expression BNEQ expression 
-- On GT reduce production expression -> expression BNEQ expression 
-- On GET reduce production expression -> expression BNEQ expression 
-- On EQ reduce production expression -> expression BNEQ expression 
-- On END reduce production expression -> expression BNEQ expression 
-- On DIV reduce production expression -> expression BNEQ expression 
-- On BXOR reduce production expression -> expression BNEQ expression 
-- On BOR reduce production expression -> expression BNEQ expression 
-- On BNEQ reduce production expression -> expression BNEQ expression 
-- On BAND reduce production expression -> expression BNEQ expression 
-- On AND reduce production expression -> expression BNEQ expression 
-- On ADD reduce production expression -> expression BNEQ expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 47:
expression -> expression BAND . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 48

State 48:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression BAND expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression BAND expression 
-- On SUB reduce production expression -> expression BAND expression 
-- On SEMI reduce production expression -> expression BAND expression 
-- On RPAR reduce production expression -> expression BAND expression 
-- On OR reduce production expression -> expression BAND expression 
-- On NEQ reduce production expression -> expression BAND expression 
-- On MUL reduce production expression -> expression BAND expression 
-- On MOD reduce production expression -> expression BAND expression 
-- On LT reduce production expression -> expression BAND expression 
-- On LET reduce production expression -> expression BAND expression 
-- On GT reduce production expression -> expression BAND expression 
-- On GET reduce production expression -> expression BAND expression 
-- On EQ reduce production expression -> expression BAND expression 
-- On END reduce production expression -> expression BAND expression 
-- On DIV reduce production expression -> expression BAND expression 
-- On BXOR reduce production expression -> expression BAND expression 
-- On BOR reduce production expression -> expression BAND expression 
-- On BNEQ reduce production expression -> expression BAND expression 
-- On BAND reduce production expression -> expression BAND expression 
-- On AND reduce production expression -> expression BAND expression 
-- On ADD reduce production expression -> expression BAND expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 49:
expression -> expression AND . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 50

State 50:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression AND expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression AND expression 
-- On SUB reduce production expression -> expression AND expression 
-- On SEMI reduce production expression -> expression AND expression 
-- On RPAR reduce production expression -> expression AND expression 
-- On OR reduce production expression -> expression AND expression 
-- On NEQ reduce production expression -> expression AND expression 
-- On MUL reduce production expression -> expression AND expression 
-- On MOD reduce production expression -> expression AND expression 
-- On LT reduce production expression -> expression AND expression 
-- On LET reduce production expression -> expression AND expression 
-- On GT reduce production expression -> expression AND expression 
-- On GET reduce production expression -> expression AND expression 
-- On EQ reduce production expression -> expression AND expression 
-- On END reduce production expression -> expression AND expression 
-- On DIV reduce production expression -> expression AND expression 
-- On BXOR reduce production expression -> expression AND expression 
-- On BOR reduce production expression -> expression AND expression 
-- On BNEQ reduce production expression -> expression AND expression 
-- On BAND reduce production expression -> expression AND expression 
-- On AND reduce production expression -> expression AND expression 
-- On ADD reduce production expression -> expression AND expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 51:
expression -> expression ADD . expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 52

State 52:
expression -> expression . LT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression ADD expression . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51
-- On XOR reduce production expression -> expression ADD expression 
-- On SUB reduce production expression -> expression ADD expression 
-- On SEMI reduce production expression -> expression ADD expression 
-- On RPAR reduce production expression -> expression ADD expression 
-- On OR reduce production expression -> expression ADD expression 
-- On NEQ reduce production expression -> expression ADD expression 
-- On MUL reduce production expression -> expression ADD expression 
-- On MOD reduce production expression -> expression ADD expression 
-- On LT reduce production expression -> expression ADD expression 
-- On LET reduce production expression -> expression ADD expression 
-- On GT reduce production expression -> expression ADD expression 
-- On GET reduce production expression -> expression ADD expression 
-- On EQ reduce production expression -> expression ADD expression 
-- On END reduce production expression -> expression ADD expression 
-- On DIV reduce production expression -> expression ADD expression 
-- On BXOR reduce production expression -> expression ADD expression 
-- On BOR reduce production expression -> expression ADD expression 
-- On BNEQ reduce production expression -> expression ADD expression 
-- On BAND reduce production expression -> expression ADD expression 
-- On AND reduce production expression -> expression ADD expression 
-- On ADD reduce production expression -> expression ADD expression 
** Conflict on XOR SUB OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD

State 53:
expression -> LPAR expression RPAR . [ XOR SUB SEMI RPAR OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
-- On XOR reduce production expression -> LPAR expression RPAR 
-- On SUB reduce production expression -> LPAR expression RPAR 
-- On SEMI reduce production expression -> LPAR expression RPAR 
-- On RPAR reduce production expression -> LPAR expression RPAR 
-- On OR reduce production expression -> LPAR expression RPAR 
-- On NEQ reduce production expression -> LPAR expression RPAR 
-- On MUL reduce production expression -> LPAR expression RPAR 
-- On MOD reduce production expression -> LPAR expression RPAR 
-- On LT reduce production expression -> LPAR expression RPAR 
-- On LET reduce production expression -> LPAR expression RPAR 
-- On GT reduce production expression -> LPAR expression RPAR 
-- On GET reduce production expression -> LPAR expression RPAR 
-- On EQ reduce production expression -> LPAR expression RPAR 
-- On END reduce production expression -> LPAR expression RPAR 
-- On DIV reduce production expression -> LPAR expression RPAR 
-- On BXOR reduce production expression -> LPAR expression RPAR 
-- On BOR reduce production expression -> LPAR expression RPAR 
-- On BNEQ reduce production expression -> LPAR expression RPAR 
-- On BAND reduce production expression -> LPAR expression RPAR 
-- On AND reduce production expression -> LPAR expression RPAR 
-- On ADD reduce production expression -> LPAR expression RPAR 

State 54:
expression -> expression . LT expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
variable_decl -> IDENT SET expression . SEMI [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On SEMI shift to state 55
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51

State 55:
variable_decl -> IDENT SET expression SEMI . [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production variable_decl -> IDENT SET expression SEMI 
-- On VOID reduce production variable_decl -> IDENT SET expression SEMI 
-- On RETURN reduce production variable_decl -> IDENT SET expression SEMI 
-- On INT reduce production variable_decl -> IDENT SET expression SEMI 
-- On IF reduce production variable_decl -> IDENT SET expression SEMI 
-- On IDENT reduce production variable_decl -> IDENT SET expression SEMI 
-- On EOF reduce production variable_decl -> IDENT SET expression SEMI 
-- On END reduce production variable_decl -> IDENT SET expression SEMI 
-- On ELSE reduce production variable_decl -> IDENT SET expression SEMI 
-- On COMMENT reduce production variable_decl -> IDENT SET expression SEMI 
-- On BOOL reduce production variable_decl -> IDENT SET expression SEMI 
-- On BEGIN reduce production variable_decl -> IDENT SET expression SEMI 

State 56:
typ -> BOOL . [ IDENT ]
-- On IDENT reduce production typ -> BOOL 

State 57:
declaration_list -> variable_decl . declaration_list [ EOF ]
-- On VOID shift to state 2
-- On INT shift to state 3
-- On IDENT shift to state 4
-- On BOOL shift to state 56
-- On variable_decl shift to state 57
-- On typ shift to state 58
-- On simple_var_decl shift to state 97
-- On function_decl shift to state 116
-- On declaration_list shift to state 118
-- On EOF reduce production declaration_list -> 

State 58:
function_decl -> typ . IDENT LPAR parameter_list RPAR BEGIN list(instruction) END [ VOID INT IDENT EOF BOOL ]
simple_var_decl -> typ . IDENT [ SEMI ]
variable_decl -> typ . IDENT SET expression SEMI [ VOID INT IDENT EOF BOOL ]
-- On IDENT shift to state 59

State 59:
function_decl -> typ IDENT . LPAR parameter_list RPAR BEGIN list(instruction) END [ VOID INT IDENT EOF BOOL ]
simple_var_decl -> typ IDENT . [ SEMI ]
variable_decl -> typ IDENT . SET expression SEMI [ VOID INT IDENT EOF BOOL ]
-- On SET shift to state 60
-- On LPAR shift to state 63
-- On SEMI reduce production simple_var_decl -> typ IDENT 

State 60:
variable_decl -> typ IDENT SET . expression SEMI [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 61

State 61:
expression -> expression . LT expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
variable_decl -> typ IDENT SET expression . SEMI [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On SEMI shift to state 62
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51

State 62:
variable_decl -> typ IDENT SET expression SEMI . [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On VOID reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On RETURN reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On INT reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On IF reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On IDENT reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On EOF reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On END reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On ELSE reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On COMMENT reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On BOOL reduce production variable_decl -> typ IDENT SET expression SEMI 
-- On BEGIN reduce production variable_decl -> typ IDENT SET expression SEMI 

State 63:
function_decl -> typ IDENT LPAR . parameter_list RPAR BEGIN list(instruction) END [ VOID INT IDENT EOF BOOL ]
-- On VOID shift to state 2
-- On INT shift to state 3
-- On BOOL shift to state 56
-- On typ shift to state 64
-- On simple_var_decl shift to state 66
-- On parameter_list shift to state 69
-- On RPAR reduce production parameter_list -> 

State 64:
simple_var_decl -> typ . IDENT [ SEPARATOR RPAR ]
-- On IDENT shift to state 65

State 65:
simple_var_decl -> typ IDENT . [ SEPARATOR RPAR ]
-- On SEPARATOR reduce production simple_var_decl -> typ IDENT 
-- On RPAR reduce production simple_var_decl -> typ IDENT 

State 66:
parameter_list -> simple_var_decl . [ RPAR ]
parameter_list -> simple_var_decl . SEPARATOR parameter_list [ RPAR ]
-- On SEPARATOR shift to state 67
-- On RPAR reduce production parameter_list -> simple_var_decl 

State 67:
parameter_list -> simple_var_decl SEPARATOR . parameter_list [ RPAR ]
-- On VOID shift to state 2
-- On INT shift to state 3
-- On BOOL shift to state 56
-- On typ shift to state 64
-- On simple_var_decl shift to state 66
-- On parameter_list shift to state 68
-- On RPAR reduce production parameter_list -> 

State 68:
parameter_list -> simple_var_decl SEPARATOR parameter_list . [ RPAR ]
-- On RPAR reduce production parameter_list -> simple_var_decl SEPARATOR parameter_list 

State 69:
function_decl -> typ IDENT LPAR parameter_list . RPAR BEGIN list(instruction) END [ VOID INT IDENT EOF BOOL ]
-- On RPAR shift to state 70

State 70:
function_decl -> typ IDENT LPAR parameter_list RPAR . BEGIN list(instruction) END [ VOID INT IDENT EOF BOOL ]
-- On BEGIN shift to state 71

State 71:
function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN . list(instruction) END [ VOID INT IDENT EOF BOOL ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 93
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On list(instruction) shift to state 114
-- On instruction shift to state 101
-- On END reduce production list(instruction) -> 

State 72:
instruction -> WHILE . LPAR expression RPAR BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> WHILE . LPAR expression RPAR SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On LPAR shift to state 73

State 73:
instruction -> WHILE LPAR . expression RPAR BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> WHILE LPAR . expression RPAR SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 74

State 74:
expression -> expression . LT expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
instruction -> WHILE LPAR expression . RPAR BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> WHILE LPAR expression . RPAR SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On RPAR shift to state 75
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51

State 75:
instruction -> WHILE LPAR expression RPAR . BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> WHILE LPAR expression RPAR . SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On SEMI shift to state 76
-- On BEGIN shift to state 77

State 76:
instruction -> WHILE LPAR expression RPAR SEMI . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On VOID reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On RETURN reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On INT reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On IF reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On IDENT reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On END reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On ELSE reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On COMMENT reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On BOOL reduce production instruction -> WHILE LPAR expression RPAR SEMI 
-- On BEGIN reduce production instruction -> WHILE LPAR expression RPAR SEMI 

State 77:
instruction -> WHILE LPAR expression RPAR BEGIN . list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 93
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On list(instruction) shift to state 112
-- On instruction shift to state 101
-- On END reduce production list(instruction) -> 

State 78:
instruction -> RETURN . expression SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> RETURN . BEGIN expression END SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> RETURN . SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On SEMI shift to state 79
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On BEGIN shift to state 80
-- On expression shift to state 84

State 79:
instruction -> RETURN SEMI . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> RETURN SEMI 
-- On VOID reduce production instruction -> RETURN SEMI 
-- On RETURN reduce production instruction -> RETURN SEMI 
-- On INT reduce production instruction -> RETURN SEMI 
-- On IF reduce production instruction -> RETURN SEMI 
-- On IDENT reduce production instruction -> RETURN SEMI 
-- On END reduce production instruction -> RETURN SEMI 
-- On ELSE reduce production instruction -> RETURN SEMI 
-- On COMMENT reduce production instruction -> RETURN SEMI 
-- On BOOL reduce production instruction -> RETURN SEMI 
-- On BEGIN reduce production instruction -> RETURN SEMI 

State 80:
instruction -> RETURN BEGIN . expression END SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 81

State 81:
expression -> expression . LT expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB OR NEQ MUL MOD LT LET GT GET EQ END DIV BXOR BOR BNEQ BAND AND ADD ]
instruction -> RETURN BEGIN expression . END SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On END shift to state 82
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51

State 82:
instruction -> RETURN BEGIN expression END . SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On SEMI shift to state 83

State 83:
instruction -> RETURN BEGIN expression END SEMI . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On VOID reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On RETURN reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On INT reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On IF reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On IDENT reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On END reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On ELSE reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On COMMENT reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On BOOL reduce production instruction -> RETURN BEGIN expression END SEMI 
-- On BEGIN reduce production instruction -> RETURN BEGIN expression END SEMI 

State 84:
expression -> expression . LT expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB SEMI OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
instruction -> RETURN expression . SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On SEMI shift to state 85
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51

State 85:
instruction -> RETURN expression SEMI . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> RETURN expression SEMI 
-- On VOID reduce production instruction -> RETURN expression SEMI 
-- On RETURN reduce production instruction -> RETURN expression SEMI 
-- On INT reduce production instruction -> RETURN expression SEMI 
-- On IF reduce production instruction -> RETURN expression SEMI 
-- On IDENT reduce production instruction -> RETURN expression SEMI 
-- On END reduce production instruction -> RETURN expression SEMI 
-- On ELSE reduce production instruction -> RETURN expression SEMI 
-- On COMMENT reduce production instruction -> RETURN expression SEMI 
-- On BOOL reduce production instruction -> RETURN expression SEMI 
-- On BEGIN reduce production instruction -> RETURN expression SEMI 

State 86:
instruction -> IF . LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF . LPAR expression RPAR BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF . LPAR expression RPAR instruction ELSE instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF . LPAR expression RPAR instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF . LPAR expression RPAR SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On LPAR shift to state 87

State 87:
instruction -> IF LPAR . expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR . expression RPAR BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR . expression RPAR instruction ELSE instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR . expression RPAR instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR . expression RPAR SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On LPAR shift to state 6
-- On IDENT shift to state 7
-- On CST shift to state 14
-- On BOOL_CST shift to state 15
-- On expression shift to state 88

State 88:
expression -> expression . LT expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GT expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . LET expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . GET expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . EQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . AND expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BAND expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . OR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . XOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BXOR expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . NEQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . BNEQ expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . ADD expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MUL expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . DIV expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . MOD expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
expression -> expression . SUB expression [ XOR SUB RPAR OR NEQ MUL MOD LT LET GT GET EQ DIV BXOR BOR BNEQ BAND AND ADD ]
instruction -> IF LPAR expression . RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression . RPAR BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression . RPAR instruction ELSE instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression . RPAR instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression . RPAR SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On XOR shift to state 17
-- On SUB shift to state 19
-- On RPAR shift to state 89
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MUL shift to state 25
-- On MOD shift to state 27
-- On LT shift to state 29
-- On LET shift to state 31
-- On GT shift to state 33
-- On GET shift to state 35
-- On EQ shift to state 37
-- On DIV shift to state 39
-- On BXOR shift to state 41
-- On BOR shift to state 43
-- On BNEQ shift to state 45
-- On BAND shift to state 47
-- On AND shift to state 49
-- On ADD shift to state 51

State 89:
instruction -> IF LPAR expression RPAR . BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR . BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR . instruction ELSE instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR . instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR . SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On SEMI shift to state 90
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 92
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On instruction shift to state 109

State 90:
instruction -> IF LPAR expression RPAR SEMI . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On VOID reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On RETURN reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On INT reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On IF reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On IDENT reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On END reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On ELSE reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On COMMENT reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On BOOL reduce production instruction -> IF LPAR expression RPAR SEMI 
-- On BEGIN reduce production instruction -> IF LPAR expression RPAR SEMI 

State 91:
instruction -> COMMENT . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> COMMENT 
-- On VOID reduce production instruction -> COMMENT 
-- On RETURN reduce production instruction -> COMMENT 
-- On INT reduce production instruction -> COMMENT 
-- On IF reduce production instruction -> COMMENT 
-- On IDENT reduce production instruction -> COMMENT 
-- On END reduce production instruction -> COMMENT 
-- On ELSE reduce production instruction -> COMMENT 
-- On COMMENT reduce production instruction -> COMMENT 
-- On BOOL reduce production instruction -> COMMENT 
-- On BEGIN reduce production instruction -> COMMENT 

State 92:
instruction -> IF LPAR expression RPAR BEGIN . list(instruction) END ELSE BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR BEGIN . list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> BEGIN . list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 93
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On list(instruction) shift to state 103
-- On instruction shift to state 101
-- On END reduce production list(instruction) -> 

State 93:
instruction -> BEGIN . list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 93
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On list(instruction) shift to state 99
-- On instruction shift to state 101
-- On END reduce production list(instruction) -> 

State 94:
instruction -> variable_decl . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> variable_decl 
-- On VOID reduce production instruction -> variable_decl 
-- On RETURN reduce production instruction -> variable_decl 
-- On INT reduce production instruction -> variable_decl 
-- On IF reduce production instruction -> variable_decl 
-- On IDENT reduce production instruction -> variable_decl 
-- On END reduce production instruction -> variable_decl 
-- On ELSE reduce production instruction -> variable_decl 
-- On COMMENT reduce production instruction -> variable_decl 
-- On BOOL reduce production instruction -> variable_decl 
-- On BEGIN reduce production instruction -> variable_decl 

State 95:
simple_var_decl -> typ . IDENT [ SEMI ]
variable_decl -> typ . IDENT SET expression SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On IDENT shift to state 96

State 96:
simple_var_decl -> typ IDENT . [ SEMI ]
variable_decl -> typ IDENT . SET expression SEMI [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On SET shift to state 60
-- On SEMI reduce production simple_var_decl -> typ IDENT 

State 97:
variable_decl -> simple_var_decl . SEMI [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On SEMI shift to state 98

State 98:
variable_decl -> simple_var_decl SEMI . [ WHILE VOID RETURN INT IF IDENT EOF END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production variable_decl -> simple_var_decl SEMI 
-- On VOID reduce production variable_decl -> simple_var_decl SEMI 
-- On RETURN reduce production variable_decl -> simple_var_decl SEMI 
-- On INT reduce production variable_decl -> simple_var_decl SEMI 
-- On IF reduce production variable_decl -> simple_var_decl SEMI 
-- On IDENT reduce production variable_decl -> simple_var_decl SEMI 
-- On EOF reduce production variable_decl -> simple_var_decl SEMI 
-- On END reduce production variable_decl -> simple_var_decl SEMI 
-- On ELSE reduce production variable_decl -> simple_var_decl SEMI 
-- On COMMENT reduce production variable_decl -> simple_var_decl SEMI 
-- On BOOL reduce production variable_decl -> simple_var_decl SEMI 
-- On BEGIN reduce production variable_decl -> simple_var_decl SEMI 

State 99:
instruction -> BEGIN list(instruction) . END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On END shift to state 100

State 100:
instruction -> BEGIN list(instruction) END . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> BEGIN list(instruction) END 
-- On VOID reduce production instruction -> BEGIN list(instruction) END 
-- On RETURN reduce production instruction -> BEGIN list(instruction) END 
-- On INT reduce production instruction -> BEGIN list(instruction) END 
-- On IF reduce production instruction -> BEGIN list(instruction) END 
-- On IDENT reduce production instruction -> BEGIN list(instruction) END 
-- On END reduce production instruction -> BEGIN list(instruction) END 
-- On ELSE reduce production instruction -> BEGIN list(instruction) END 
-- On COMMENT reduce production instruction -> BEGIN list(instruction) END 
-- On BOOL reduce production instruction -> BEGIN list(instruction) END 
-- On BEGIN reduce production instruction -> BEGIN list(instruction) END 

State 101:
list(instruction) -> instruction . list(instruction) [ END ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 93
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On list(instruction) shift to state 102
-- On instruction shift to state 101
-- On END reduce production list(instruction) -> 

State 102:
list(instruction) -> instruction list(instruction) . [ END ]
-- On END reduce production list(instruction) -> instruction list(instruction) 

State 103:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) . END ELSE BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR BEGIN list(instruction) . END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> BEGIN list(instruction) . END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On END shift to state 104

State 104:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END . ELSE BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> BEGIN list(instruction) END . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On ELSE shift to state 105
-- On WHILE reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On WHILE reduce production instruction -> BEGIN list(instruction) END 
-- On VOID reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On VOID reduce production instruction -> BEGIN list(instruction) END 
-- On RETURN reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On RETURN reduce production instruction -> BEGIN list(instruction) END 
-- On INT reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On INT reduce production instruction -> BEGIN list(instruction) END 
-- On IF reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On IF reduce production instruction -> BEGIN list(instruction) END 
-- On IDENT reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On IDENT reduce production instruction -> BEGIN list(instruction) END 
-- On END reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On END reduce production instruction -> BEGIN list(instruction) END 
-- On ELSE reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On ELSE reduce production instruction -> BEGIN list(instruction) END 
-- On COMMENT reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On COMMENT reduce production instruction -> BEGIN list(instruction) END 
-- On BOOL reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On BOOL reduce production instruction -> BEGIN list(instruction) END 
-- On BEGIN reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END 
-- On BEGIN reduce production instruction -> BEGIN list(instruction) END 
** Conflict on WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN

State 105:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE . BEGIN list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On BEGIN shift to state 106

State 106:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN . list(instruction) END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 93
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On list(instruction) shift to state 107
-- On instruction shift to state 101
-- On END reduce production list(instruction) -> 

State 107:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) . END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On END shift to state 108

State 108:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On VOID reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On RETURN reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On INT reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On IF reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On IDENT reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On END reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On ELSE reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On COMMENT reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On BOOL reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 
-- On BEGIN reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END 

State 109:
instruction -> IF LPAR expression RPAR instruction . ELSE instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
instruction -> IF LPAR expression RPAR instruction . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On ELSE shift to state 110
-- On WHILE reduce production instruction -> IF LPAR expression RPAR instruction 
-- On VOID reduce production instruction -> IF LPAR expression RPAR instruction 
-- On RETURN reduce production instruction -> IF LPAR expression RPAR instruction 
-- On INT reduce production instruction -> IF LPAR expression RPAR instruction 
-- On IF reduce production instruction -> IF LPAR expression RPAR instruction 
-- On IDENT reduce production instruction -> IF LPAR expression RPAR instruction 
-- On END reduce production instruction -> IF LPAR expression RPAR instruction 
-- On ELSE reduce production instruction -> IF LPAR expression RPAR instruction 
-- On COMMENT reduce production instruction -> IF LPAR expression RPAR instruction 
-- On BOOL reduce production instruction -> IF LPAR expression RPAR instruction 
-- On BEGIN reduce production instruction -> IF LPAR expression RPAR instruction 
** Conflict on ELSE

State 110:
instruction -> IF LPAR expression RPAR instruction ELSE . instruction [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE shift to state 72
-- On VOID shift to state 2
-- On RETURN shift to state 78
-- On INT shift to state 3
-- On IF shift to state 86
-- On IDENT shift to state 4
-- On COMMENT shift to state 91
-- On BOOL shift to state 56
-- On BEGIN shift to state 93
-- On variable_decl shift to state 94
-- On typ shift to state 95
-- On simple_var_decl shift to state 97
-- On instruction shift to state 111

State 111:
instruction -> IF LPAR expression RPAR instruction ELSE instruction . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On VOID reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On RETURN reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On INT reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On IF reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On IDENT reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On END reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On ELSE reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On COMMENT reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On BOOL reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 
-- On BEGIN reduce production instruction -> IF LPAR expression RPAR instruction ELSE instruction 

State 112:
instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) . END [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On END shift to state 113

State 113:
instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END . [ WHILE VOID RETURN INT IF IDENT END ELSE COMMENT BOOL BEGIN ]
-- On WHILE reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On VOID reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On RETURN reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On INT reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On IF reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On IDENT reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On END reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On ELSE reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On COMMENT reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On BOOL reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 
-- On BEGIN reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END 

State 114:
function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN list(instruction) . END [ VOID INT IDENT EOF BOOL ]
-- On END shift to state 115

State 115:
function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN list(instruction) END . [ VOID INT IDENT EOF BOOL ]
-- On VOID reduce production function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN list(instruction) END 
-- On INT reduce production function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN list(instruction) END 
-- On IDENT reduce production function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN list(instruction) END 
-- On EOF reduce production function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN list(instruction) END 
-- On BOOL reduce production function_decl -> typ IDENT LPAR parameter_list RPAR BEGIN list(instruction) END 

State 116:
declaration_list -> function_decl . declaration_list [ EOF ]
-- On VOID shift to state 2
-- On INT shift to state 3
-- On IDENT shift to state 4
-- On BOOL shift to state 56
-- On variable_decl shift to state 57
-- On typ shift to state 58
-- On simple_var_decl shift to state 97
-- On function_decl shift to state 116
-- On declaration_list shift to state 117
-- On EOF reduce production declaration_list -> 

State 117:
declaration_list -> function_decl declaration_list . [ EOF ]
-- On EOF reduce production declaration_list -> function_decl declaration_list 

State 118:
declaration_list -> variable_decl declaration_list . [ EOF ]
-- On EOF reduce production declaration_list -> variable_decl declaration_list 

State 119:
program' -> program . [ # ]
-- On # accept program

State 120:
program -> declaration_list . EOF [ # ]
-- On EOF shift to state 121

State 121:
program -> declaration_list EOF . [ # ]
-- On # reduce production program -> declaration_list EOF 

