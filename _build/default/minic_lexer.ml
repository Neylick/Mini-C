# 1 "minic_lexer.mll"
 
  open Lexing
  open Minic_parser

  (* Fonction auxiliaire pour rassembler les mots-clÃ©s *)
  let keyword_or_ident =
    let h = Hashtbl.create 17 in
    List.iter (fun (str, token) -> Hashtbl.add h str token)
    [ 
      "return",   RETURN;
      "true",     BOOL_CST true;
      "false",    BOOL_CST false;
      "int",      INT;
      "bool",     BOOL;
      "if",       IF;
      "else",     ELSE;
      "while",    WHILE;
      "void",     VOID;
    ] ;
    fun s ->
      try  Hashtbl.find h s
      with Not_found -> IDENT(s) 

# 26 "minic_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\226\255\227\255\002\000\001\000\003\000\234\255\003\000\
    \030\000\031\000\242\255\243\255\244\255\245\255\246\255\247\255\
    \248\255\249\255\032\000\251\255\080\000\155\000\165\000\175\000\
    \002\000\255\255\192\000\215\000\247\000\236\255\238\255\237\255\
    \235\255\233\255\231\255\229\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\027\000\025\000\023\000\255\255\029\000\
    \016\000\015\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\005\000\255\255\003\000\002\000\002\000\014\000\
    \001\000\255\255\255\255\002\000\002\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\025\000\024\000\000\000\024\000\000\000\024\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \024\000\007\000\024\000\000\000\000\000\010\000\004\000\034\000\
    \017\000\016\000\012\000\013\000\000\000\023\000\000\000\011\000\
    \022\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\000\000\019\000\009\000\018\000\008\000\035\000\
    \032\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\031\000\030\000\029\000\003\000\000\000\
    \000\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\015\000\005\000\014\000\006\000\033\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\000\000\000\000\000\000\000\000\020\000\
    \000\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\000\000\000\000\000\000\026\000\000\000\000\000\
    \002\000\028\000\028\000\028\000\028\000\028\000\028\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\021\000\
    \021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\026\000\000\000\000\000\
    \000\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\024\000\255\255\000\000\255\255\024\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\024\000\255\255\255\255\000\000\000\000\004\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\003\000\
    \007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\008\000\009\000\018\000\000\000\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\255\255\255\255\255\255\255\255\020\000\
    \255\255\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\255\255\255\255\255\255\022\000\255\255\255\255\
    \000\000\026\000\026\000\026\000\026\000\026\000\026\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\022\000\255\255\255\255\
    \255\255\026\000\026\000\026\000\026\000\026\000\026\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \028\000\028\000\028\000\028\000\028\000\028\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \028\000\028\000\028\000\028\000\028\000\028\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 39 "minic_lexer.mll"
           ( new_line lexbuf; token lexbuf )
# 197 "minic_lexer.ml"

  | 1 ->
# 40 "minic_lexer.mll"
                     ( token lexbuf )
# 202 "minic_lexer.ml"

  | 2 ->
let
# 41 "minic_lexer.mll"
              n
# 208 "minic_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 41 "minic_lexer.mll"
                ( CST(int_of_string n) )
# 212 "minic_lexer.ml"

  | 3 ->
let
# 42 "minic_lexer.mll"
             id
# 218 "minic_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 42 "minic_lexer.mll"
                ( keyword_or_ident id )
# 222 "minic_lexer.ml"

  | 4 ->
# 43 "minic_lexer.mll"
        ( SEMI )
# 227 "minic_lexer.ml"

  | 5 ->
# 44 "minic_lexer.mll"
        ( SET )
# 232 "minic_lexer.ml"

  | 6 ->
# 45 "minic_lexer.mll"
        ( LPAR )
# 237 "minic_lexer.ml"

  | 7 ->
# 46 "minic_lexer.mll"
        ( RPAR )
# 242 "minic_lexer.ml"

  | 8 ->
# 47 "minic_lexer.mll"
        ( BEGIN )
# 247 "minic_lexer.ml"

  | 9 ->
# 48 "minic_lexer.mll"
        ( END )
# 252 "minic_lexer.ml"

  | 10 ->
# 50 "minic_lexer.mll"
          ( ADD )
# 257 "minic_lexer.ml"

  | 11 ->
# 51 "minic_lexer.mll"
          ( MUL )
# 262 "minic_lexer.ml"

  | 12 ->
# 52 "minic_lexer.mll"
           ( DIV )
# 267 "minic_lexer.ml"

  | 13 ->
# 53 "minic_lexer.mll"
           ( MOD )
# 272 "minic_lexer.ml"

  | 14 ->
# 54 "minic_lexer.mll"
          ( SUB )
# 277 "minic_lexer.ml"

  | 15 ->
# 56 "minic_lexer.mll"
          ( LT )
# 282 "minic_lexer.ml"

  | 16 ->
# 57 "minic_lexer.mll"
          ( GT )
# 287 "minic_lexer.ml"

  | 17 ->
# 58 "minic_lexer.mll"
            ( LET )
# 292 "minic_lexer.ml"

  | 18 ->
# 59 "minic_lexer.mll"
           ( GET )
# 297 "minic_lexer.ml"

  | 19 ->
# 60 "minic_lexer.mll"
           ( EQ )
# 302 "minic_lexer.ml"

  | 20 ->
# 62 "minic_lexer.mll"
           ( NEQ )
# 307 "minic_lexer.ml"

  | 21 ->
# 63 "minic_lexer.mll"
          ( BNEQ )
# 312 "minic_lexer.ml"

  | 22 ->
# 64 "minic_lexer.mll"
           ( OR )
# 317 "minic_lexer.ml"

  | 23 ->
# 65 "minic_lexer.mll"
          ( BOR )
# 322 "minic_lexer.ml"

  | 24 ->
# 66 "minic_lexer.mll"
           ( AND )
# 327 "minic_lexer.ml"

  | 25 ->
# 67 "minic_lexer.mll"
          ( BAND )
# 332 "minic_lexer.ml"

  | 26 ->
# 68 "minic_lexer.mll"
           ( XOR )
# 337 "minic_lexer.ml"

  | 27 ->
# 69 "minic_lexer.mll"
          ( BXOR )
# 342 "minic_lexer.ml"

  | 28 ->
# 71 "minic_lexer.mll"
        ( EOF )
# 347 "minic_lexer.ml"

  | 29 ->
# 72 "minic_lexer.mll"
      ( failwith ("Unknown character : " ^ (lexeme lexbuf)) )
# 352 "minic_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

