# 1 "minic_lexer.mll"
 
  open Lexing
  open Minic_parser

  let resolve_keyword =
    let h = Hashtbl.create 17 in
    List.iter (fun (str, token) -> Hashtbl.add h str token)
    [ 
      "return",   RETURN;
      "true",     BOOL_CST true;
      "false",    BOOL_CST false;
      "int",      INT;
      "bool",     BOOL;
      "if",       IF;
      "else",     ELSE;
      "while",    WHILE;
      "void",     VOID;
    ] ;
    fun s ->
      try  Hashtbl.find h s
      with Not_found -> IDENT(s) 

# 25 "minic_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\224\255\225\255\002\000\001\000\003\000\232\255\003\000\
    \030\000\031\000\240\255\242\255\243\255\244\255\245\255\246\255\
    \247\255\248\255\032\000\250\255\086\000\086\000\161\000\171\000\
    \181\000\002\000\255\255\195\000\218\000\233\000\053\000\002\000\
    \251\255\102\000\054\000\234\255\236\255\235\255\233\255\231\255\
    \229\255\227\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\029\000\027\000\025\000\255\255\031\000\
    \018\000\017\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\006\000\255\255\014\000\003\000\002\000\002\000\
    \016\000\001\000\255\255\255\255\002\000\002\000\255\255\255\255\
    \255\255\255\255\004\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\030\000\031\000\
    \000\000\030\000\030\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\025\000\026\000\025\000\032\000\025\000\000\000\025\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \025\000\007\000\025\000\000\000\000\000\010\000\004\000\040\000\
    \017\000\016\000\011\000\012\000\013\000\024\000\000\000\020\000\
    \023\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\000\000\019\000\009\000\018\000\008\000\041\000\
    \038\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\037\000\036\000\035\000\003\000\033\000\
    \033\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\015\000\005\000\014\000\006\000\039\000\
    \030\000\000\000\000\000\000\000\000\000\031\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \033\000\000\000\000\000\000\000\000\000\034\000\000\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\000\000\000\000\000\000\000\000\021\000\000\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\000\000\
    \000\000\000\000\000\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\000\000\000\000\000\000\
    \002\000\000\000\255\255\027\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\022\000\022\000\000\000\000\000\000\000\000\000\
    \000\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\027\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\025\000\031\000\000\000\255\255\025\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\025\000\255\255\255\255\000\000\000\000\004\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\003\000\
    \007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\008\000\009\000\018\000\000\000\030\000\
    \034\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\
    \020\000\255\255\255\255\255\255\255\255\020\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \033\000\255\255\255\255\255\255\255\255\033\000\255\255\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\255\255\255\255\255\255\255\255\021\000\255\255\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\255\255\
    \255\255\255\255\255\255\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\255\255\255\255\255\255\
    \000\000\255\255\031\000\023\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\255\255\255\255\255\255\255\255\
    \255\255\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\023\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \255\255\255\255\255\255\255\255\255\255\030\000\034\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\029\000\029\000\029\000\029\000\029\000\029\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\033\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 38 "minic_lexer.mll"
           ( new_line lexbuf; token lexbuf )
# 195 "minic_lexer.ml"

  | 1 ->
# 39 "minic_lexer.mll"
                     ( token lexbuf )
# 200 "minic_lexer.ml"

  | 2 ->
let
# 40 "minic_lexer.mll"
              n
# 206 "minic_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 40 "minic_lexer.mll"
                ( CST(int_of_string n) )
# 210 "minic_lexer.ml"

  | 3 ->
let
# 41 "minic_lexer.mll"
             id
# 216 "minic_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 41 "minic_lexer.mll"
                ( resolve_keyword id )
# 220 "minic_lexer.ml"

  | 4 ->
# 42 "minic_lexer.mll"
            ( COMMENT )
# 225 "minic_lexer.ml"

  | 5 ->
# 43 "minic_lexer.mll"
        ( SEMI )
# 230 "minic_lexer.ml"

  | 6 ->
# 44 "minic_lexer.mll"
        ( SET )
# 235 "minic_lexer.ml"

  | 7 ->
# 45 "minic_lexer.mll"
        ( LPAR )
# 240 "minic_lexer.ml"

  | 8 ->
# 46 "minic_lexer.mll"
        ( RPAR )
# 245 "minic_lexer.ml"

  | 9 ->
# 47 "minic_lexer.mll"
        ( BEGIN )
# 250 "minic_lexer.ml"

  | 10 ->
# 48 "minic_lexer.mll"
        ( END )
# 255 "minic_lexer.ml"

  | 11 ->
# 49 "minic_lexer.mll"
        ( SEPARATOR )
# 260 "minic_lexer.ml"

  | 12 ->
# 51 "minic_lexer.mll"
          ( ADD )
# 265 "minic_lexer.ml"

  | 13 ->
# 52 "minic_lexer.mll"
          ( MUL )
# 270 "minic_lexer.ml"

  | 14 ->
# 53 "minic_lexer.mll"
           ( DIV )
# 275 "minic_lexer.ml"

  | 15 ->
# 54 "minic_lexer.mll"
           ( MOD )
# 280 "minic_lexer.ml"

  | 16 ->
# 55 "minic_lexer.mll"
          ( SUB )
# 285 "minic_lexer.ml"

  | 17 ->
# 57 "minic_lexer.mll"
          ( LT )
# 290 "minic_lexer.ml"

  | 18 ->
# 58 "minic_lexer.mll"
          ( GT )
# 295 "minic_lexer.ml"

  | 19 ->
# 59 "minic_lexer.mll"
            ( LET )
# 300 "minic_lexer.ml"

  | 20 ->
# 60 "minic_lexer.mll"
           ( GET )
# 305 "minic_lexer.ml"

  | 21 ->
# 61 "minic_lexer.mll"
           ( EQ )
# 310 "minic_lexer.ml"

  | 22 ->
# 63 "minic_lexer.mll"
           ( NEQ )
# 315 "minic_lexer.ml"

  | 23 ->
# 64 "minic_lexer.mll"
          ( BNEQ )
# 320 "minic_lexer.ml"

  | 24 ->
# 65 "minic_lexer.mll"
           ( OR )
# 325 "minic_lexer.ml"

  | 25 ->
# 66 "minic_lexer.mll"
          ( BOR )
# 330 "minic_lexer.ml"

  | 26 ->
# 67 "minic_lexer.mll"
           ( AND )
# 335 "minic_lexer.ml"

  | 27 ->
# 68 "minic_lexer.mll"
          ( BAND )
# 340 "minic_lexer.ml"

  | 28 ->
# 69 "minic_lexer.mll"
           ( XOR )
# 345 "minic_lexer.ml"

  | 29 ->
# 70 "minic_lexer.mll"
          ( BXOR )
# 350 "minic_lexer.ml"

  | 30 ->
# 72 "minic_lexer.mll"
        ( EOF )
# 355 "minic_lexer.ml"

  | 31 ->
# 73 "minic_lexer.mll"
      ( failwith ("Unknown character : " ^ (lexeme lexbuf)) )
# 360 "minic_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

