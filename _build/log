# dune build
# OCAMLPARAM: unset
# Workspace root: "/mnt/c/Users/Neiliku~/Documents/COURS/Info/Compil/Caml miniC lexer"
$ /usr/bin/nproc > /tmp/dunec8854d.output 2> /dev/null
# Auto-detected concurrency: 16
# disable binary cache
$ /usr/bin/ocamlc.opt -config > /tmp/dune73907b.output
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dyn
#  ; merlin = true
#  ; for_host = None
#  ; fdo_target_exe = None
#  ; build_dir = "default"
#  ; toplevel_path = None
#  ; ocaml_bin = External "/usr/bin"
#  ; ocaml = External "/usr/bin/ocaml"
#  ; ocamlc = External "/usr/bin/ocamlc.opt"
#  ; ocamlopt = Some External "/usr/bin/ocamlopt.opt"
#  ; ocamldep = External "/usr/bin/ocamldep.opt"
#  ; ocamlmklib = External "/usr/bin/ocamlmklib.opt"
#  ;
#  env =
#    map
#      {
#      "CAML_LD_LIBRARY_PATH" :
#        "/mnt/c/Users/Neiliku~/Documents/COURS/Info/Compil/Caml miniC lexer/_build/install/default/lib/stublibs"
#      ; "DUNE_CONFIGURATOR" : "/usr/bin/ocamlc.opt"
#      ; "INSIDE_DUNE" : "1"
#      ;
#      "MANPATH" :
#        "/mnt/c/Users/Neiliku~/Documents/COURS/Info/Compil/Caml miniC lexer/_build/install/default/bin"
#      ;
#      "OCAMLFIND_IGNORE_DUPS_IN" :
#        "/mnt/c/Users/Neiliku~/Documents/COURS/Info/Compil/Caml miniC lexer/_build/install/default/lib"
#      ;
#      "OCAMLPATH" :
#        "/mnt/c/Users/Neiliku~/Documents/COURS/Info/Compil/Caml miniC lexer/_build/install/default/lib"
#      }
#  ; findlib_path = [ External "/usr/lib/ocaml" ]
#  ; arch_sixtyfour = true
#  ; natdynlink_supported = true
#  ; supports_shared_libraries = true
#  ; opam_vars = map {}
#  ;
#  ocaml_config =
#    { version = "4.08.1"
#    ; standard_library_default = "/usr/lib/ocaml"
#    ; standard_library = "/usr/lib/ocaml"
#    ; standard_runtime = "the_standard_runtime_variable_was_deleted"
#    ; ccomp_type = "cc"
#    ; c_compiler = "x86_64-linux-gnu-gcc"
#    ; ocamlc_cflags = [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-fPIC" ]
#    ; ocamlopt_cflags = [ "-O2"; "-fno-strict-aliasing"; "-fwrapv" ]
#    ;
#    bytecomp_c_compiler =
#      [ "x86_64-linux-gnu-gcc"
#      ; "-O2"
#      ; "-fno-strict-aliasing"
#      ; "-fwrapv"
#      ; "-fPIC"
#      ; "-D_FILE_OFFSET_BITS=64"
#      ; "-D_REENTRANT"
#      ]
#    ; bytecomp_c_libraries = [ "-lm"; "-ldl"; "-lpthread" ]
#    ;
#    native_c_compiler =
#      [ "x86_64-linux-gnu-gcc"
#      ; "-O2"
#      ; "-fno-strict-aliasing"
#      ; "-fwrapv"
#      ; "-D_FILE_OFFSET_BITS=64"
#      ; "-D_REENTRANT"
#      ]
#    ; native_c_libraries = [ "-lm"; "-ldl" ]
#    ; cc_profile = [ "-pg" ]
#    ; architecture = "amd64"
#    ; model = "default"
#    ; int_size = 63
#    ; word_size = 64
#    ; system = "linux"
#    ; asm = [ "x86_64-linux-gnu-as" ]
#    ; asm_cfi_supported = true
#    ; with_frame_pointers = false
#    ; ext_exe = ""
#    ; ext_obj = ".o"
#    ; ext_asm = ".s"
#    ; ext_lib = ".a"
#    ; ext_dll = ".so"
#    ; os_type = "Unix"
#    ; default_executable_name = "a.out"
#    ; systhread_supported = true
#    ; host = "x86_64-pc-linux-gnu"
#    ; target = "x86_64-pc-linux-gnu"
#    ; profiling = true
#    ; flambda = false
#    ; spacetime = false
#    ; safe_string = false
#    ; exec_magic_number = "Caml1999X025"
#    ; cmi_magic_number = "Caml1999I025"
#    ; cmo_magic_number = "Caml1999O025"
#    ; cma_magic_number = "Caml1999A025"
#    ; cmx_magic_number = "Caml1999Y025"
#    ; cmxa_magic_number = "Caml1999Z025"
#    ; ast_impl_magic_number = "Caml1999M025"
#    ; ast_intf_magic_number = "Caml1999N025"
#    ; cmxs_magic_number = "Caml1999D025"
#    ; cmt_magic_number = "Caml1999T025"
#    ; natdynlink_supported = true
#    ; supports_shared_libraries = true
#    ; windows_unicode = false
#    }
#  ;
#  which =
#    map
#      { "ocaml" : Some External "/usr/bin/ocaml"
#      ; "ocamlc" : Some External "/usr/bin/ocamlc.opt"
#      ; "ocamlobjinfo" : Some External "/usr/bin/ocamlobjinfo.opt"
#      }
#  }
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w -49 -nopervasives -nostdlib -g -bin-annot -I .minic.eobjs/byte -no-alias-deps -opaque -o .minic.eobjs/byte/dune__exe.cmo -c -impl .minic.eobjs/dune__exe.ml-gen)
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -impl minic.ml) > _build/default/.minic.eobjs/minic.ml.d
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -impl minic_ast.ml) > _build/default/.minic.eobjs/minic_ast.ml.d
$ (cd _build/default && /usr/bin/ocamllex.opt -q -o minic_lexer.ml minic_lexer.mll)
$ (cd _build/default && /usr/bin/menhir --explain --dump minic_parser.mly --base minic_parser --infer-write-query minic_parser__mock.ml.mock)
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -impl minic_typechecker.ml) > _build/default/.minic.eobjs/minic_typechecker.ml.d
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -impl minic_lexer.ml) > _build/default/.minic.eobjs/minic_lexer.ml.d
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -bin-annot -I .minic.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/byte/dune__exe__Minic_ast.cmo -c -impl minic_ast.ml)
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -impl minic_parser__mock.ml.mock) > _build/default/.minic.eobjs/minic_parser__mock.ml.mock.d
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .minic.eobjs/byte -open Dune__exe -short-paths -i -impl minic_parser__mock.ml.mock) > _build/default/minic_parser__mock.mli.inferred
$ (cd _build/default && /usr/bin/menhir --explain --dump minic_parser.mly --base minic_parser --infer-read-reply minic_parser__mock.mli.inferred)
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -bin-annot -I .minic.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/byte/dune__exe__Minic_typechecker.cmo -c -impl minic_typechecker.ml)
> File "minic_typechecker.ml", line 22, characters 24-76:
> 22 | ........................function
> 23 |       | Cst _ -> Int
> 24 |       | BCst _ -> Bool
> Warning 8: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Add (_, _)|Mul (_, _)|Lt (_, _)|Get _|Call (_, _))
> File "minic_typechecker.ml", line 22, characters 12-21:
> 22 |     let rec type_expr = function
>                  ^^^^^^^^^
> Warning 39: unused rec flag.
> File "minic_typechecker.ml", line 30, characters 30-331:
> 30 | ..............................function
> 31 |       (* Cas d'une instruction [return]. On vérifie que le type correspond au
> 32 |          type de retour attendu par la fonction dans laquelle on se trouve. *)
> 33 |       | Return(e) -> let t = type_expr e in
> 34 |                      if t <> fdef.return then
> 35 |                        failwith "type error"
> Warning 8: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Putchar _|Set (_, _)|If (_, _, _)|While (_, _)|Expr _)
> File "minic_typechecker.ml", line 8, characters 6-16:
> 8 |   let global_env =
>           ^^^^^^^^^^
> Warning 26: unused variable global_env.
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -impl minic_parser.ml) > _build/default/.minic.eobjs/minic_parser.ml.d
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -intf minic_parser.mli) > _build/default/.minic.eobjs/minic_parser.mli.d
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w -49 -nopervasives -nostdlib -g -I .minic.eobjs/byte -I .minic.eobjs/native -intf-suffix .ml-gen -no-alias-deps -opaque -o .minic.eobjs/native/dune__exe.cmx -c -impl .minic.eobjs/dune__exe.ml-gen)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .minic.eobjs/byte -I .minic.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/native/dune__exe__Minic_ast.cmx -c -impl minic_ast.ml)
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -bin-annot -I .minic.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/byte/dune__exe__Minic_parser.cmi -c -intf minic_parser.mli)
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -bin-annot -I .minic.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/byte/dune__exe__Minic_lexer.cmo -c -impl minic_lexer.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .minic.eobjs/byte -I .minic.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/native/dune__exe__Minic_typechecker.cmx -c -impl minic_typechecker.ml)
> File "minic_typechecker.ml", line 22, characters 24-76:
> 22 | ........................function
> 23 |       | Cst _ -> Int
> 24 |       | BCst _ -> Bool
> Warning 8: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Add (_, _)|Mul (_, _)|Lt (_, _)|Get _|Call (_, _))
> File "minic_typechecker.ml", line 22, characters 12-21:
> 22 |     let rec type_expr = function
>                  ^^^^^^^^^
> Warning 39: unused rec flag.
> File "minic_typechecker.ml", line 30, characters 30-331:
> 30 | ..............................function
> 31 |       (* Cas d'une instruction [return]. On vérifie que le type correspond au
> 32 |          type de retour attendu par la fonction dans laquelle on se trouve. *)
> 33 |       | Return(e) -> let t = type_expr e in
> 34 |                      if t <> fdef.return then
> 35 |                        failwith "type error"
> Warning 8: this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Putchar _|Set (_, _)|If (_, _, _)|While (_, _)|Expr _)
> File "minic_typechecker.ml", line 8, characters 6-16:
> 8 |   let global_env =
>           ^^^^^^^^^^
> Warning 26: unused variable global_env.
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .minic.eobjs/byte -I .minic.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/native/dune__exe__Minic_parser.cmx -c -impl minic_parser.ml)
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -bin-annot -I .minic.eobjs/byte -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/byte/dune__exe__Minic.cmo -c -impl minic.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .minic.eobjs/byte -I .minic.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/native/dune__exe__Minic_lexer.cmx -c -impl minic_lexer.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -I .minic.eobjs/byte -I .minic.eobjs/native -intf-suffix .ml -no-alias-deps -opaque -open Dune__exe -o .minic.eobjs/native/dune__exe__Minic.cmx -c -impl minic.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -warn-error -A -g -o minic.exe .minic.eobjs/native/dune__exe.cmx .minic.eobjs/native/dune__exe__Minic_ast.cmx .minic.eobjs/native/dune__exe__Minic_parser.cmx .minic.eobjs/native/dune__exe__Minic_lexer.cmx .minic.eobjs/native/dune__exe__Minic_typechecker.cmx .minic.eobjs/native/dune__exe__Minic.cmx)
